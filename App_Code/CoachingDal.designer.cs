#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3607
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="pminsig_coaching")]
public partial class CoachingDalDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertNew(New instance);
  partial void UpdateNew(New instance);
  partial void DeleteNew(New instance);
  partial void InsertAdminUser(AdminUser instance);
  partial void UpdateAdminUser(AdminUser instance);
  partial void DeleteAdminUser(AdminUser instance);
  partial void InsertArticle(Article instance);
  partial void UpdateArticle(Article instance);
  partial void DeleteArticle(Article instance);
  partial void InsertContentP(ContentP instance);
  partial void UpdateContentP(ContentP instance);
  partial void DeleteContentP(ContentP instance);
  partial void InsertGallery(Gallery instance);
  partial void UpdateGallery(Gallery instance);
  partial void DeleteGallery(Gallery instance);
  partial void InsertGalleryImage(GalleryImage instance);
  partial void UpdateGalleryImage(GalleryImage instance);
  partial void DeleteGalleryImage(GalleryImage instance);
  partial void InsertGraduate(Graduate instance);
  partial void UpdateGraduate(Graduate instance);
  partial void DeleteGraduate(Graduate instance);
  partial void InsertGraduateSession(GraduateSession instance);
  partial void UpdateGraduateSession(GraduateSession instance);
  partial void DeleteGraduateSession(GraduateSession instance);
  partial void InsertLead(Lead instance);
  partial void UpdateLead(Lead instance);
  partial void DeleteLead(Lead instance);
  partial void InsertLog(Log instance);
  partial void UpdateLog(Log instance);
  partial void DeleteLog(Log instance);
  partial void InsertMailList(MailList instance);
  partial void UpdateMailList(MailList instance);
  partial void DeleteMailList(MailList instance);
  #endregion
	
	public CoachingDalDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["pminsig_coachingConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CoachingDalDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoachingDalDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoachingDalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoachingDalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<New> News
	{
		get
		{
			return this.GetTable<New>();
		}
	}
	
	public System.Data.Linq.Table<AdminUser> AdminUsers
	{
		get
		{
			return this.GetTable<AdminUser>();
		}
	}
	
	public System.Data.Linq.Table<Article> Articles
	{
		get
		{
			return this.GetTable<Article>();
		}
	}
	
	public System.Data.Linq.Table<ContentP> ContentPs
	{
		get
		{
			return this.GetTable<ContentP>();
		}
	}
	
	public System.Data.Linq.Table<Gallery> Galleries
	{
		get
		{
			return this.GetTable<Gallery>();
		}
	}
	
	public System.Data.Linq.Table<GalleryImage> GalleryImages
	{
		get
		{
			return this.GetTable<GalleryImage>();
		}
	}
	
	public System.Data.Linq.Table<Graduate> Graduates
	{
		get
		{
			return this.GetTable<Graduate>();
		}
	}
	
	public System.Data.Linq.Table<GraduateSession> GraduateSessions
	{
		get
		{
			return this.GetTable<GraduateSession>();
		}
	}
	
	public System.Data.Linq.Table<Lead> Leads
	{
		get
		{
			return this.GetTable<Lead>();
		}
	}
	
	public System.Data.Linq.Table<Log> Logs
	{
		get
		{
			return this.GetTable<Log>();
		}
	}
	
	public System.Data.Linq.Table<MailList> MailLists
	{
		get
		{
			return this.GetTable<MailList>();
		}
	}
}

[Table(Name="pminsig_ororor.News")]
public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _NewsID;
	
	private string _NewsContentOriginal;
	
	private string _NewsContentLink;
	
	private System.DateTime _NewsCreationDate;
	
	private int _NewsPlace;
	
	private string _spNewsCreationDate;
	
	private System.DateTime _NewsLastUpdate;
	
	private string _spNewsLastUpdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(string value);
    partial void OnNewsIDChanged();
    partial void OnNewsContentOriginalChanging(string value);
    partial void OnNewsContentOriginalChanged();
    partial void OnNewsContentLinkChanging(string value);
    partial void OnNewsContentLinkChanged();
    partial void OnNewsCreationDateChanging(System.DateTime value);
    partial void OnNewsCreationDateChanged();
    partial void OnNewsPlaceChanging(int value);
    partial void OnNewsPlaceChanged();
    partial void OnspNewsCreationDateChanging(string value);
    partial void OnspNewsCreationDateChanged();
    partial void OnNewsLastUpdateChanging(System.DateTime value);
    partial void OnNewsLastUpdateChanged();
    partial void OnspNewsLastUpdateChanging(string value);
    partial void OnspNewsLastUpdateChanged();
    #endregion
	
	public New()
	{
		OnCreated();
	}
	
	[Column(Storage="_NewsID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string NewsID
	{
		get
		{
			return this._NewsID;
		}
		set
		{
			if ((this._NewsID != value))
			{
				this.OnNewsIDChanging(value);
				this.SendPropertyChanging();
				this._NewsID = value;
				this.SendPropertyChanged("NewsID");
				this.OnNewsIDChanged();
			}
		}
	}
	
	[Column(Storage="_NewsContentOriginal", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string NewsContentOriginal
	{
		get
		{
			return this._NewsContentOriginal;
		}
		set
		{
			if ((this._NewsContentOriginal != value))
			{
				this.OnNewsContentOriginalChanging(value);
				this.SendPropertyChanging();
				this._NewsContentOriginal = value;
				this.SendPropertyChanged("NewsContentOriginal");
				this.OnNewsContentOriginalChanged();
			}
		}
	}
	
	[Column(Storage="_NewsContentLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string NewsContentLink
	{
		get
		{
			return this._NewsContentLink;
		}
		set
		{
			if ((this._NewsContentLink != value))
			{
				this.OnNewsContentLinkChanging(value);
				this.SendPropertyChanging();
				this._NewsContentLink = value;
				this.SendPropertyChanged("NewsContentLink");
				this.OnNewsContentLinkChanged();
			}
		}
	}
	
	[Column(Storage="_NewsCreationDate", DbType="DateTime NOT NULL")]
	public System.DateTime NewsCreationDate
	{
		get
		{
			return this._NewsCreationDate;
		}
		set
		{
			if ((this._NewsCreationDate != value))
			{
				this.OnNewsCreationDateChanging(value);
				this.SendPropertyChanging();
				this._NewsCreationDate = value;
				this.SendPropertyChanged("NewsCreationDate");
				this.OnNewsCreationDateChanged();
			}
		}
	}
	
	[Column(Storage="_NewsPlace", DbType="Int NOT NULL")]
	public int NewsPlace
	{
		get
		{
			return this._NewsPlace;
		}
		set
		{
			if ((this._NewsPlace != value))
			{
				this.OnNewsPlaceChanging(value);
				this.SendPropertyChanging();
				this._NewsPlace = value;
				this.SendPropertyChanged("NewsPlace");
				this.OnNewsPlaceChanged();
			}
		}
	}
	
	[Column(Storage="_spNewsCreationDate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spNewsCreationDate
	{
		get
		{
			return this._spNewsCreationDate;
		}
		set
		{
			if ((this._spNewsCreationDate != value))
			{
				this.OnspNewsCreationDateChanging(value);
				this.SendPropertyChanging();
				this._spNewsCreationDate = value;
				this.SendPropertyChanged("spNewsCreationDate");
				this.OnspNewsCreationDateChanged();
			}
		}
	}
	
	[Column(Storage="_NewsLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime NewsLastUpdate
	{
		get
		{
			return this._NewsLastUpdate;
		}
		set
		{
			if ((this._NewsLastUpdate != value))
			{
				this.OnNewsLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._NewsLastUpdate = value;
				this.SendPropertyChanged("NewsLastUpdate");
				this.OnNewsLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_spNewsLastUpdate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spNewsLastUpdate
	{
		get
		{
			return this._spNewsLastUpdate;
		}
		set
		{
			if ((this._spNewsLastUpdate != value))
			{
				this.OnspNewsLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._spNewsLastUpdate = value;
				this.SendPropertyChanged("spNewsLastUpdate");
				this.OnspNewsLastUpdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.AdminUser")]
public partial class AdminUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _AdminUserID;
	
	private System.DateTime _CreationTime;
	
	private string _spCreationTime;
	
	private System.DateTime _LastLogin;
	
	private string _spLastLogin;
	
	private string _Password;
	
	private string _UserID;
	
	private System.DateTime _LastUpdate;
	
	private string _spLastUpdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminUserIDChanging(string value);
    partial void OnAdminUserIDChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnspCreationTimeChanging(string value);
    partial void OnspCreationTimeChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    partial void OnspLastLoginChanging(string value);
    partial void OnspLastLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    partial void OnspLastUpdateChanging(string value);
    partial void OnspLastUpdateChanged();
    #endregion
	
	public AdminUser()
	{
		OnCreated();
	}
	
	[Column(Storage="_AdminUserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string AdminUserID
	{
		get
		{
			return this._AdminUserID;
		}
		set
		{
			if ((this._AdminUserID != value))
			{
				this.OnAdminUserIDChanging(value);
				this.SendPropertyChanging();
				this._AdminUserID = value;
				this.SendPropertyChanged("AdminUserID");
				this.OnAdminUserIDChanged();
			}
		}
	}
	
	[Column(Storage="_CreationTime", DbType="DateTime NOT NULL")]
	public System.DateTime CreationTime
	{
		get
		{
			return this._CreationTime;
		}
		set
		{
			if ((this._CreationTime != value))
			{
				this.OnCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._CreationTime = value;
				this.SendPropertyChanged("CreationTime");
				this.OnCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_spCreationTime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spCreationTime
	{
		get
		{
			return this._spCreationTime;
		}
		set
		{
			if ((this._spCreationTime != value))
			{
				this.OnspCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._spCreationTime = value;
				this.SendPropertyChanged("spCreationTime");
				this.OnspCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_LastLogin", DbType="DateTime NOT NULL")]
	public System.DateTime LastLogin
	{
		get
		{
			return this._LastLogin;
		}
		set
		{
			if ((this._LastLogin != value))
			{
				this.OnLastLoginChanging(value);
				this.SendPropertyChanging();
				this._LastLogin = value;
				this.SendPropertyChanged("LastLogin");
				this.OnLastLoginChanged();
			}
		}
	}
	
	[Column(Storage="_spLastLogin", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spLastLogin
	{
		get
		{
			return this._spLastLogin;
		}
		set
		{
			if ((this._spLastLogin != value))
			{
				this.OnspLastLoginChanging(value);
				this.SendPropertyChanging();
				this._spLastLogin = value;
				this.SendPropertyChanged("spLastLogin");
				this.OnspLastLoginChanged();
			}
		}
	}
	
	[Column(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[Column(Storage="_UserID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[Column(Storage="_LastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdate
	{
		get
		{
			return this._LastUpdate;
		}
		set
		{
			if ((this._LastUpdate != value))
			{
				this.OnLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdate = value;
				this.SendPropertyChanged("LastUpdate");
				this.OnLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_spLastUpdate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spLastUpdate
	{
		get
		{
			return this._spLastUpdate;
		}
		set
		{
			if ((this._spLastUpdate != value))
			{
				this.OnspLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._spLastUpdate = value;
				this.SendPropertyChanged("spLastUpdate");
				this.OnspLastUpdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.Article")]
public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ArticleID;
	
	private System.DateTime _CreationTime;
	
	private string _ArticleContent;
	
	private string _ArticleDescription;
	
	private string _ArticleKeyWords;
	
	private string _ArticleTitle;
	
	private string _ArticleLanguageID;
	
	private string _ArticleLink;
	
	private string _ArticleFullPageLink;
	
	private System.DateTime _LastUpdate;
	
	private string _spLastUpdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIDChanging(string value);
    partial void OnArticleIDChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnArticleContentChanging(string value);
    partial void OnArticleContentChanged();
    partial void OnArticleDescriptionChanging(string value);
    partial void OnArticleDescriptionChanged();
    partial void OnArticleKeyWordsChanging(string value);
    partial void OnArticleKeyWordsChanged();
    partial void OnArticleTitleChanging(string value);
    partial void OnArticleTitleChanged();
    partial void OnArticleLanguageIDChanging(string value);
    partial void OnArticleLanguageIDChanged();
    partial void OnArticleLinkChanging(string value);
    partial void OnArticleLinkChanged();
    partial void OnArticleFullPageLinkChanging(string value);
    partial void OnArticleFullPageLinkChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    partial void OnspLastUpdateChanging(string value);
    partial void OnspLastUpdateChanged();
    #endregion
	
	public Article()
	{
		OnCreated();
	}
	
	[Column(Storage="_ArticleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ArticleID
	{
		get
		{
			return this._ArticleID;
		}
		set
		{
			if ((this._ArticleID != value))
			{
				this.OnArticleIDChanging(value);
				this.SendPropertyChanging();
				this._ArticleID = value;
				this.SendPropertyChanged("ArticleID");
				this.OnArticleIDChanged();
			}
		}
	}
	
	[Column(Storage="_CreationTime", DbType="DateTime NOT NULL")]
	public System.DateTime CreationTime
	{
		get
		{
			return this._CreationTime;
		}
		set
		{
			if ((this._CreationTime != value))
			{
				this.OnCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._CreationTime = value;
				this.SendPropertyChanged("CreationTime");
				this.OnCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ArticleContent
	{
		get
		{
			return this._ArticleContent;
		}
		set
		{
			if ((this._ArticleContent != value))
			{
				this.OnArticleContentChanging(value);
				this.SendPropertyChanging();
				this._ArticleContent = value;
				this.SendPropertyChanged("ArticleContent");
				this.OnArticleContentChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ArticleDescription
	{
		get
		{
			return this._ArticleDescription;
		}
		set
		{
			if ((this._ArticleDescription != value))
			{
				this.OnArticleDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ArticleDescription = value;
				this.SendPropertyChanged("ArticleDescription");
				this.OnArticleDescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleKeyWords", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ArticleKeyWords
	{
		get
		{
			return this._ArticleKeyWords;
		}
		set
		{
			if ((this._ArticleKeyWords != value))
			{
				this.OnArticleKeyWordsChanging(value);
				this.SendPropertyChanging();
				this._ArticleKeyWords = value;
				this.SendPropertyChanged("ArticleKeyWords");
				this.OnArticleKeyWordsChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleTitle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ArticleTitle
	{
		get
		{
			return this._ArticleTitle;
		}
		set
		{
			if ((this._ArticleTitle != value))
			{
				this.OnArticleTitleChanging(value);
				this.SendPropertyChanging();
				this._ArticleTitle = value;
				this.SendPropertyChanged("ArticleTitle");
				this.OnArticleTitleChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleLanguageID", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string ArticleLanguageID
	{
		get
		{
			return this._ArticleLanguageID;
		}
		set
		{
			if ((this._ArticleLanguageID != value))
			{
				this.OnArticleLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._ArticleLanguageID = value;
				this.SendPropertyChanged("ArticleLanguageID");
				this.OnArticleLanguageIDChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ArticleLink
	{
		get
		{
			return this._ArticleLink;
		}
		set
		{
			if ((this._ArticleLink != value))
			{
				this.OnArticleLinkChanging(value);
				this.SendPropertyChanging();
				this._ArticleLink = value;
				this.SendPropertyChanged("ArticleLink");
				this.OnArticleLinkChanged();
			}
		}
	}
	
	[Column(Storage="_ArticleFullPageLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ArticleFullPageLink
	{
		get
		{
			return this._ArticleFullPageLink;
		}
		set
		{
			if ((this._ArticleFullPageLink != value))
			{
				this.OnArticleFullPageLinkChanging(value);
				this.SendPropertyChanging();
				this._ArticleFullPageLink = value;
				this.SendPropertyChanged("ArticleFullPageLink");
				this.OnArticleFullPageLinkChanged();
			}
		}
	}
	
	[Column(Storage="_LastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdate
	{
		get
		{
			return this._LastUpdate;
		}
		set
		{
			if ((this._LastUpdate != value))
			{
				this.OnLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdate = value;
				this.SendPropertyChanged("LastUpdate");
				this.OnLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_spLastUpdate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spLastUpdate
	{
		get
		{
			return this._spLastUpdate;
		}
		set
		{
			if ((this._spLastUpdate != value))
			{
				this.OnspLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._spLastUpdate = value;
				this.SendPropertyChanged("spLastUpdate");
				this.OnspLastUpdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.ContentP")]
public partial class ContentP : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ContentID;
	
	private string _ContentButtonTitle;
	
	private int _ContentMenuPlace;
	
	private string _ContentPageType;
	
	private byte _IsLinkPage;
	
	private string _ContentLink;
	
	private string _ContentFullPageLink;
	
	private string _ContentContent;
	
	private string _ContentDescription;
	
	private string _ContentKeyWords;
	
	private string _ContentTitle;
	
	private string _ContentLanguageID;
	
	private System.DateTime _LastUpdate;
	
	private string _spLastUpdate;
	
	private System.DateTime _CreationTime;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContentIDChanging(string value);
    partial void OnContentIDChanged();
    partial void OnContentButtonTitleChanging(string value);
    partial void OnContentButtonTitleChanged();
    partial void OnContentMenuPlaceChanging(int value);
    partial void OnContentMenuPlaceChanged();
    partial void OnContentPageTypeChanging(string value);
    partial void OnContentPageTypeChanged();
    partial void OnIsLinkPageChanging(byte value);
    partial void OnIsLinkPageChanged();
    partial void OnContentLinkChanging(string value);
    partial void OnContentLinkChanged();
    partial void OnContentFullPageLinkChanging(string value);
    partial void OnContentFullPageLinkChanged();
    partial void OnContentContentChanging(string value);
    partial void OnContentContentChanged();
    partial void OnContentDescriptionChanging(string value);
    partial void OnContentDescriptionChanged();
    partial void OnContentKeyWordsChanging(string value);
    partial void OnContentKeyWordsChanged();
    partial void OnContentTitleChanging(string value);
    partial void OnContentTitleChanged();
    partial void OnContentLanguageIDChanging(string value);
    partial void OnContentLanguageIDChanged();
    partial void OnLastUpdateChanging(System.DateTime value);
    partial void OnLastUpdateChanged();
    partial void OnspLastUpdateChanging(string value);
    partial void OnspLastUpdateChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    #endregion
	
	public ContentP()
	{
		OnCreated();
	}
	
	[Column(Storage="_ContentID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ContentID
	{
		get
		{
			return this._ContentID;
		}
		set
		{
			if ((this._ContentID != value))
			{
				this.OnContentIDChanging(value);
				this.SendPropertyChanging();
				this._ContentID = value;
				this.SendPropertyChanged("ContentID");
				this.OnContentIDChanged();
			}
		}
	}
	
	[Column(Storage="_ContentButtonTitle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentButtonTitle
	{
		get
		{
			return this._ContentButtonTitle;
		}
		set
		{
			if ((this._ContentButtonTitle != value))
			{
				this.OnContentButtonTitleChanging(value);
				this.SendPropertyChanging();
				this._ContentButtonTitle = value;
				this.SendPropertyChanged("ContentButtonTitle");
				this.OnContentButtonTitleChanged();
			}
		}
	}
	
	[Column(Storage="_ContentMenuPlace", DbType="Int NOT NULL")]
	public int ContentMenuPlace
	{
		get
		{
			return this._ContentMenuPlace;
		}
		set
		{
			if ((this._ContentMenuPlace != value))
			{
				this.OnContentMenuPlaceChanging(value);
				this.SendPropertyChanging();
				this._ContentMenuPlace = value;
				this.SendPropertyChanged("ContentMenuPlace");
				this.OnContentMenuPlaceChanged();
			}
		}
	}
	
	[Column(Storage="_ContentPageType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentPageType
	{
		get
		{
			return this._ContentPageType;
		}
		set
		{
			if ((this._ContentPageType != value))
			{
				this.OnContentPageTypeChanging(value);
				this.SendPropertyChanging();
				this._ContentPageType = value;
				this.SendPropertyChanged("ContentPageType");
				this.OnContentPageTypeChanged();
			}
		}
	}
	
	[Column(Storage="_IsLinkPage", DbType="TinyInt NOT NULL")]
	public byte IsLinkPage
	{
		get
		{
			return this._IsLinkPage;
		}
		set
		{
			if ((this._IsLinkPage != value))
			{
				this.OnIsLinkPageChanging(value);
				this.SendPropertyChanging();
				this._IsLinkPage = value;
				this.SendPropertyChanged("IsLinkPage");
				this.OnIsLinkPageChanged();
			}
		}
	}
	
	[Column(Storage="_ContentLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentLink
	{
		get
		{
			return this._ContentLink;
		}
		set
		{
			if ((this._ContentLink != value))
			{
				this.OnContentLinkChanging(value);
				this.SendPropertyChanging();
				this._ContentLink = value;
				this.SendPropertyChanged("ContentLink");
				this.OnContentLinkChanged();
			}
		}
	}
	
	[Column(Storage="_ContentFullPageLink", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentFullPageLink
	{
		get
		{
			return this._ContentFullPageLink;
		}
		set
		{
			if ((this._ContentFullPageLink != value))
			{
				this.OnContentFullPageLinkChanging(value);
				this.SendPropertyChanging();
				this._ContentFullPageLink = value;
				this.SendPropertyChanged("ContentFullPageLink");
				this.OnContentFullPageLinkChanged();
			}
		}
	}
	
	[Column(Storage="_ContentContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentContent
	{
		get
		{
			return this._ContentContent;
		}
		set
		{
			if ((this._ContentContent != value))
			{
				this.OnContentContentChanging(value);
				this.SendPropertyChanging();
				this._ContentContent = value;
				this.SendPropertyChanged("ContentContent");
				this.OnContentContentChanged();
			}
		}
	}
	
	[Column(Storage="_ContentDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentDescription
	{
		get
		{
			return this._ContentDescription;
		}
		set
		{
			if ((this._ContentDescription != value))
			{
				this.OnContentDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ContentDescription = value;
				this.SendPropertyChanged("ContentDescription");
				this.OnContentDescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_ContentKeyWords", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentKeyWords
	{
		get
		{
			return this._ContentKeyWords;
		}
		set
		{
			if ((this._ContentKeyWords != value))
			{
				this.OnContentKeyWordsChanging(value);
				this.SendPropertyChanging();
				this._ContentKeyWords = value;
				this.SendPropertyChanged("ContentKeyWords");
				this.OnContentKeyWordsChanged();
			}
		}
	}
	
	[Column(Storage="_ContentTitle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ContentTitle
	{
		get
		{
			return this._ContentTitle;
		}
		set
		{
			if ((this._ContentTitle != value))
			{
				this.OnContentTitleChanging(value);
				this.SendPropertyChanging();
				this._ContentTitle = value;
				this.SendPropertyChanged("ContentTitle");
				this.OnContentTitleChanged();
			}
		}
	}
	
	[Column(Storage="_ContentLanguageID", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string ContentLanguageID
	{
		get
		{
			return this._ContentLanguageID;
		}
		set
		{
			if ((this._ContentLanguageID != value))
			{
				this.OnContentLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._ContentLanguageID = value;
				this.SendPropertyChanged("ContentLanguageID");
				this.OnContentLanguageIDChanged();
			}
		}
	}
	
	[Column(Storage="_LastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdate
	{
		get
		{
			return this._LastUpdate;
		}
		set
		{
			if ((this._LastUpdate != value))
			{
				this.OnLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdate = value;
				this.SendPropertyChanged("LastUpdate");
				this.OnLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_spLastUpdate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spLastUpdate
	{
		get
		{
			return this._spLastUpdate;
		}
		set
		{
			if ((this._spLastUpdate != value))
			{
				this.OnspLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._spLastUpdate = value;
				this.SendPropertyChanged("spLastUpdate");
				this.OnspLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_CreationTime", DbType="DateTime NOT NULL")]
	public System.DateTime CreationTime
	{
		get
		{
			return this._CreationTime;
		}
		set
		{
			if ((this._CreationTime != value))
			{
				this.OnCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._CreationTime = value;
				this.SendPropertyChanged("CreationTime");
				this.OnCreationTimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.Gallery")]
public partial class Gallery : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _GalleryID;
	
	private string _GalleryName;
	
	private int _GalleryPlace;
	
	private System.DateTime _GalleryCreationTime;
	
	private string _spGalleryCreationTime;
	
	private System.DateTime _GalleryLastUpdate;
	
	private string _spGalleryLastUpdate;
	
	private EntitySet<GalleryImage> _GalleryImages;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalleryIDChanging(string value);
    partial void OnGalleryIDChanged();
    partial void OnGalleryNameChanging(string value);
    partial void OnGalleryNameChanged();
    partial void OnGalleryPlaceChanging(int value);
    partial void OnGalleryPlaceChanged();
    partial void OnGalleryCreationTimeChanging(System.DateTime value);
    partial void OnGalleryCreationTimeChanged();
    partial void OnspGalleryCreationTimeChanging(string value);
    partial void OnspGalleryCreationTimeChanged();
    partial void OnGalleryLastUpdateChanging(System.DateTime value);
    partial void OnGalleryLastUpdateChanged();
    partial void OnspGalleryLastUpdateChanging(string value);
    partial void OnspGalleryLastUpdateChanged();
    #endregion
	
	public Gallery()
	{
		this._GalleryImages = new EntitySet<GalleryImage>(new Action<GalleryImage>(this.attach_GalleryImages), new Action<GalleryImage>(this.detach_GalleryImages));
		OnCreated();
	}
	
	[Column(Storage="_GalleryID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string GalleryID
	{
		get
		{
			return this._GalleryID;
		}
		set
		{
			if ((this._GalleryID != value))
			{
				this.OnGalleryIDChanging(value);
				this.SendPropertyChanging();
				this._GalleryID = value;
				this.SendPropertyChanged("GalleryID");
				this.OnGalleryIDChanged();
			}
		}
	}
	
	[Column(Storage="_GalleryName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string GalleryName
	{
		get
		{
			return this._GalleryName;
		}
		set
		{
			if ((this._GalleryName != value))
			{
				this.OnGalleryNameChanging(value);
				this.SendPropertyChanging();
				this._GalleryName = value;
				this.SendPropertyChanged("GalleryName");
				this.OnGalleryNameChanged();
			}
		}
	}
	
	[Column(Storage="_GalleryPlace", DbType="Int NOT NULL")]
	public int GalleryPlace
	{
		get
		{
			return this._GalleryPlace;
		}
		set
		{
			if ((this._GalleryPlace != value))
			{
				this.OnGalleryPlaceChanging(value);
				this.SendPropertyChanging();
				this._GalleryPlace = value;
				this.SendPropertyChanged("GalleryPlace");
				this.OnGalleryPlaceChanged();
			}
		}
	}
	
	[Column(Storage="_GalleryCreationTime", DbType="DateTime NOT NULL")]
	public System.DateTime GalleryCreationTime
	{
		get
		{
			return this._GalleryCreationTime;
		}
		set
		{
			if ((this._GalleryCreationTime != value))
			{
				this.OnGalleryCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._GalleryCreationTime = value;
				this.SendPropertyChanged("GalleryCreationTime");
				this.OnGalleryCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_spGalleryCreationTime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spGalleryCreationTime
	{
		get
		{
			return this._spGalleryCreationTime;
		}
		set
		{
			if ((this._spGalleryCreationTime != value))
			{
				this.OnspGalleryCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._spGalleryCreationTime = value;
				this.SendPropertyChanged("spGalleryCreationTime");
				this.OnspGalleryCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_GalleryLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime GalleryLastUpdate
	{
		get
		{
			return this._GalleryLastUpdate;
		}
		set
		{
			if ((this._GalleryLastUpdate != value))
			{
				this.OnGalleryLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._GalleryLastUpdate = value;
				this.SendPropertyChanged("GalleryLastUpdate");
				this.OnGalleryLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_spGalleryLastUpdate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spGalleryLastUpdate
	{
		get
		{
			return this._spGalleryLastUpdate;
		}
		set
		{
			if ((this._spGalleryLastUpdate != value))
			{
				this.OnspGalleryLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._spGalleryLastUpdate = value;
				this.SendPropertyChanged("spGalleryLastUpdate");
				this.OnspGalleryLastUpdateChanged();
			}
		}
	}
	
	[Association(Name="Gallery_GalleryImage", Storage="_GalleryImages", ThisKey="GalleryID", OtherKey="ImageGalleryID")]
	public EntitySet<GalleryImage> GalleryImages
	{
		get
		{
			return this._GalleryImages;
		}
		set
		{
			this._GalleryImages.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_GalleryImages(GalleryImage entity)
	{
		this.SendPropertyChanging();
		entity.Gallery = this;
	}
	
	private void detach_GalleryImages(GalleryImage entity)
	{
		this.SendPropertyChanging();
		entity.Gallery = null;
	}
}

[Table(Name="pminsig_ororor.GalleryImage")]
public partial class GalleryImage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ImageID;
	
	private string _ImageGalleryID;
	
	private string _ImageName;
	
	private string _ImageDescription;
	
	private int _ImagePlace;
	
	private string _ImageAbsolutePath;
	
	private string _ImageRelativePath;
	
	private System.DateTime _ImageCreationTime;
	
	private System.DateTime _ImageUploadTime;
	
	private string _spImageCreationTime;
	
	private string _spImageUploadTime;
	
	private EntityRef<Gallery> _Gallery;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(string value);
    partial void OnImageIDChanged();
    partial void OnImageGalleryIDChanging(string value);
    partial void OnImageGalleryIDChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnImageDescriptionChanging(string value);
    partial void OnImageDescriptionChanged();
    partial void OnImagePlaceChanging(int value);
    partial void OnImagePlaceChanged();
    partial void OnImageAbsolutePathChanging(string value);
    partial void OnImageAbsolutePathChanged();
    partial void OnImageRelativePathChanging(string value);
    partial void OnImageRelativePathChanged();
    partial void OnImageCreationTimeChanging(System.DateTime value);
    partial void OnImageCreationTimeChanged();
    partial void OnImageUploadTimeChanging(System.DateTime value);
    partial void OnImageUploadTimeChanged();
    partial void OnspImageCreationTimeChanging(string value);
    partial void OnspImageCreationTimeChanged();
    partial void OnspImageUploadTimeChanging(string value);
    partial void OnspImageUploadTimeChanged();
    #endregion
	
	public GalleryImage()
	{
		this._Gallery = default(EntityRef<Gallery>);
		OnCreated();
	}
	
	[Column(Storage="_ImageID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string ImageID
	{
		get
		{
			return this._ImageID;
		}
		set
		{
			if ((this._ImageID != value))
			{
				this.OnImageIDChanging(value);
				this.SendPropertyChanging();
				this._ImageID = value;
				this.SendPropertyChanged("ImageID");
				this.OnImageIDChanged();
			}
		}
	}
	
	[Column(Storage="_ImageGalleryID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ImageGalleryID
	{
		get
		{
			return this._ImageGalleryID;
		}
		set
		{
			if ((this._ImageGalleryID != value))
			{
				if (this._Gallery.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnImageGalleryIDChanging(value);
				this.SendPropertyChanging();
				this._ImageGalleryID = value;
				this.SendPropertyChanged("ImageGalleryID");
				this.OnImageGalleryIDChanged();
			}
		}
	}
	
	[Column(Storage="_ImageName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ImageName
	{
		get
		{
			return this._ImageName;
		}
		set
		{
			if ((this._ImageName != value))
			{
				this.OnImageNameChanging(value);
				this.SendPropertyChanging();
				this._ImageName = value;
				this.SendPropertyChanged("ImageName");
				this.OnImageNameChanged();
			}
		}
	}
	
	[Column(Storage="_ImageDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ImageDescription
	{
		get
		{
			return this._ImageDescription;
		}
		set
		{
			if ((this._ImageDescription != value))
			{
				this.OnImageDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ImageDescription = value;
				this.SendPropertyChanged("ImageDescription");
				this.OnImageDescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_ImagePlace", DbType="Int NOT NULL")]
	public int ImagePlace
	{
		get
		{
			return this._ImagePlace;
		}
		set
		{
			if ((this._ImagePlace != value))
			{
				this.OnImagePlaceChanging(value);
				this.SendPropertyChanging();
				this._ImagePlace = value;
				this.SendPropertyChanged("ImagePlace");
				this.OnImagePlaceChanged();
			}
		}
	}
	
	[Column(Storage="_ImageAbsolutePath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ImageAbsolutePath
	{
		get
		{
			return this._ImageAbsolutePath;
		}
		set
		{
			if ((this._ImageAbsolutePath != value))
			{
				this.OnImageAbsolutePathChanging(value);
				this.SendPropertyChanging();
				this._ImageAbsolutePath = value;
				this.SendPropertyChanged("ImageAbsolutePath");
				this.OnImageAbsolutePathChanged();
			}
		}
	}
	
	[Column(Storage="_ImageRelativePath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ImageRelativePath
	{
		get
		{
			return this._ImageRelativePath;
		}
		set
		{
			if ((this._ImageRelativePath != value))
			{
				this.OnImageRelativePathChanging(value);
				this.SendPropertyChanging();
				this._ImageRelativePath = value;
				this.SendPropertyChanged("ImageRelativePath");
				this.OnImageRelativePathChanged();
			}
		}
	}
	
	[Column(Storage="_ImageCreationTime", DbType="DateTime NOT NULL")]
	public System.DateTime ImageCreationTime
	{
		get
		{
			return this._ImageCreationTime;
		}
		set
		{
			if ((this._ImageCreationTime != value))
			{
				this.OnImageCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._ImageCreationTime = value;
				this.SendPropertyChanged("ImageCreationTime");
				this.OnImageCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_ImageUploadTime", DbType="DateTime NOT NULL")]
	public System.DateTime ImageUploadTime
	{
		get
		{
			return this._ImageUploadTime;
		}
		set
		{
			if ((this._ImageUploadTime != value))
			{
				this.OnImageUploadTimeChanging(value);
				this.SendPropertyChanging();
				this._ImageUploadTime = value;
				this.SendPropertyChanged("ImageUploadTime");
				this.OnImageUploadTimeChanged();
			}
		}
	}
	
	[Column(Storage="_spImageCreationTime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spImageCreationTime
	{
		get
		{
			return this._spImageCreationTime;
		}
		set
		{
			if ((this._spImageCreationTime != value))
			{
				this.OnspImageCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._spImageCreationTime = value;
				this.SendPropertyChanged("spImageCreationTime");
				this.OnspImageCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_spImageUploadTime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spImageUploadTime
	{
		get
		{
			return this._spImageUploadTime;
		}
		set
		{
			if ((this._spImageUploadTime != value))
			{
				this.OnspImageUploadTimeChanging(value);
				this.SendPropertyChanging();
				this._spImageUploadTime = value;
				this.SendPropertyChanged("spImageUploadTime");
				this.OnspImageUploadTimeChanged();
			}
		}
	}
	
	[Association(Name="Gallery_GalleryImage", Storage="_Gallery", ThisKey="ImageGalleryID", OtherKey="GalleryID", IsForeignKey=true)]
	public Gallery Gallery
	{
		get
		{
			return this._Gallery.Entity;
		}
		set
		{
			Gallery previousValue = this._Gallery.Entity;
			if (((previousValue != value) 
						|| (this._Gallery.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Gallery.Entity = null;
					previousValue.GalleryImages.Remove(this);
				}
				this._Gallery.Entity = value;
				if ((value != null))
				{
					value.GalleryImages.Add(this);
					this._ImageGalleryID = value.GalleryID;
				}
				else
				{
					this._ImageGalleryID = default(string);
				}
				this.SendPropertyChanged("Gallery");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.Graduate")]
public partial class Graduate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _GraduateID;
	
	private string _GraduateSessionID;
	
	private string _GraduateName;
	
	private System.DateTime _CreationTime;
	
	private string _spCreationTime;
	
	private EntityRef<GraduateSession> _GraduateSession;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGraduateIDChanging(string value);
    partial void OnGraduateIDChanged();
    partial void OnGraduateSessionIDChanging(string value);
    partial void OnGraduateSessionIDChanged();
    partial void OnGraduateNameChanging(string value);
    partial void OnGraduateNameChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnspCreationTimeChanging(string value);
    partial void OnspCreationTimeChanged();
    #endregion
	
	public Graduate()
	{
		this._GraduateSession = default(EntityRef<GraduateSession>);
		OnCreated();
	}
	
	[Column(Storage="_GraduateID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string GraduateID
	{
		get
		{
			return this._GraduateID;
		}
		set
		{
			if ((this._GraduateID != value))
			{
				this.OnGraduateIDChanging(value);
				this.SendPropertyChanging();
				this._GraduateID = value;
				this.SendPropertyChanged("GraduateID");
				this.OnGraduateIDChanged();
			}
		}
	}
	
	[Column(Storage="_GraduateSessionID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string GraduateSessionID
	{
		get
		{
			return this._GraduateSessionID;
		}
		set
		{
			if ((this._GraduateSessionID != value))
			{
				if (this._GraduateSession.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGraduateSessionIDChanging(value);
				this.SendPropertyChanging();
				this._GraduateSessionID = value;
				this.SendPropertyChanged("GraduateSessionID");
				this.OnGraduateSessionIDChanged();
			}
		}
	}
	
	[Column(Storage="_GraduateName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string GraduateName
	{
		get
		{
			return this._GraduateName;
		}
		set
		{
			if ((this._GraduateName != value))
			{
				this.OnGraduateNameChanging(value);
				this.SendPropertyChanging();
				this._GraduateName = value;
				this.SendPropertyChanged("GraduateName");
				this.OnGraduateNameChanged();
			}
		}
	}
	
	[Column(Storage="_CreationTime", DbType="DateTime NOT NULL")]
	public System.DateTime CreationTime
	{
		get
		{
			return this._CreationTime;
		}
		set
		{
			if ((this._CreationTime != value))
			{
				this.OnCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._CreationTime = value;
				this.SendPropertyChanged("CreationTime");
				this.OnCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_spCreationTime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spCreationTime
	{
		get
		{
			return this._spCreationTime;
		}
		set
		{
			if ((this._spCreationTime != value))
			{
				this.OnspCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._spCreationTime = value;
				this.SendPropertyChanged("spCreationTime");
				this.OnspCreationTimeChanged();
			}
		}
	}
	
	[Association(Name="GraduateSession_Graduate", Storage="_GraduateSession", ThisKey="GraduateSessionID", OtherKey="GraduateSessionID", IsForeignKey=true)]
	public GraduateSession GraduateSession
	{
		get
		{
			return this._GraduateSession.Entity;
		}
		set
		{
			GraduateSession previousValue = this._GraduateSession.Entity;
			if (((previousValue != value) 
						|| (this._GraduateSession.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._GraduateSession.Entity = null;
					previousValue.Graduates.Remove(this);
				}
				this._GraduateSession.Entity = value;
				if ((value != null))
				{
					value.Graduates.Add(this);
					this._GraduateSessionID = value.GraduateSessionID;
				}
				else
				{
					this._GraduateSessionID = default(string);
				}
				this.SendPropertyChanged("GraduateSession");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.GraduateSession")]
public partial class GraduateSession : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _GraduateSessionID;
	
	private string _GraduateYearHebrew;
	
	private string _GraduateYearNumber;
	
	private int _GraduatePlace;
	
	private System.DateTime _CreationTime;
	
	private string _spCreationTime;
	
	private EntitySet<Graduate> _Graduates;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGraduateSessionIDChanging(string value);
    partial void OnGraduateSessionIDChanged();
    partial void OnGraduateYearHebrewChanging(string value);
    partial void OnGraduateYearHebrewChanged();
    partial void OnGraduateYearNumberChanging(string value);
    partial void OnGraduateYearNumberChanged();
    partial void OnGraduatePlaceChanging(int value);
    partial void OnGraduatePlaceChanged();
    partial void OnCreationTimeChanging(System.DateTime value);
    partial void OnCreationTimeChanged();
    partial void OnspCreationTimeChanging(string value);
    partial void OnspCreationTimeChanged();
    #endregion
	
	public GraduateSession()
	{
		this._Graduates = new EntitySet<Graduate>(new Action<Graduate>(this.attach_Graduates), new Action<Graduate>(this.detach_Graduates));
		OnCreated();
	}
	
	[Column(Storage="_GraduateSessionID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string GraduateSessionID
	{
		get
		{
			return this._GraduateSessionID;
		}
		set
		{
			if ((this._GraduateSessionID != value))
			{
				this.OnGraduateSessionIDChanging(value);
				this.SendPropertyChanging();
				this._GraduateSessionID = value;
				this.SendPropertyChanged("GraduateSessionID");
				this.OnGraduateSessionIDChanged();
			}
		}
	}
	
	[Column(Storage="_GraduateYearHebrew", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string GraduateYearHebrew
	{
		get
		{
			return this._GraduateYearHebrew;
		}
		set
		{
			if ((this._GraduateYearHebrew != value))
			{
				this.OnGraduateYearHebrewChanging(value);
				this.SendPropertyChanging();
				this._GraduateYearHebrew = value;
				this.SendPropertyChanged("GraduateYearHebrew");
				this.OnGraduateYearHebrewChanged();
			}
		}
	}
	
	[Column(Storage="_GraduateYearNumber", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string GraduateYearNumber
	{
		get
		{
			return this._GraduateYearNumber;
		}
		set
		{
			if ((this._GraduateYearNumber != value))
			{
				this.OnGraduateYearNumberChanging(value);
				this.SendPropertyChanging();
				this._GraduateYearNumber = value;
				this.SendPropertyChanged("GraduateYearNumber");
				this.OnGraduateYearNumberChanged();
			}
		}
	}
	
	[Column(Storage="_GraduatePlace", DbType="Int NOT NULL")]
	public int GraduatePlace
	{
		get
		{
			return this._GraduatePlace;
		}
		set
		{
			if ((this._GraduatePlace != value))
			{
				this.OnGraduatePlaceChanging(value);
				this.SendPropertyChanging();
				this._GraduatePlace = value;
				this.SendPropertyChanged("GraduatePlace");
				this.OnGraduatePlaceChanged();
			}
		}
	}
	
	[Column(Storage="_CreationTime", DbType="DateTime NOT NULL")]
	public System.DateTime CreationTime
	{
		get
		{
			return this._CreationTime;
		}
		set
		{
			if ((this._CreationTime != value))
			{
				this.OnCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._CreationTime = value;
				this.SendPropertyChanged("CreationTime");
				this.OnCreationTimeChanged();
			}
		}
	}
	
	[Column(Storage="_spCreationTime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spCreationTime
	{
		get
		{
			return this._spCreationTime;
		}
		set
		{
			if ((this._spCreationTime != value))
			{
				this.OnspCreationTimeChanging(value);
				this.SendPropertyChanging();
				this._spCreationTime = value;
				this.SendPropertyChanged("spCreationTime");
				this.OnspCreationTimeChanged();
			}
		}
	}
	
	[Association(Name="GraduateSession_Graduate", Storage="_Graduates", ThisKey="GraduateSessionID", OtherKey="GraduateSessionID")]
	public EntitySet<Graduate> Graduates
	{
		get
		{
			return this._Graduates;
		}
		set
		{
			this._Graduates.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Graduates(Graduate entity)
	{
		this.SendPropertyChanging();
		entity.GraduateSession = this;
	}
	
	private void detach_Graduates(Graduate entity)
	{
		this.SendPropertyChanging();
		entity.GraduateSession = null;
	}
}

[Table(Name="pminsig_ororor.Lead")]
public partial class Lead : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _LeadID;
	
	private string _LeadName;
	
	private string _LeadTitle;
	
	private string _LeadBody;
	
	private string _LeadMail;
	
	private System.DateTime _LeadDate;
	
	private string _spLeadDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeadIDChanging(string value);
    partial void OnLeadIDChanged();
    partial void OnLeadNameChanging(string value);
    partial void OnLeadNameChanged();
    partial void OnLeadTitleChanging(string value);
    partial void OnLeadTitleChanged();
    partial void OnLeadBodyChanging(string value);
    partial void OnLeadBodyChanged();
    partial void OnLeadMailChanging(string value);
    partial void OnLeadMailChanged();
    partial void OnLeadDateChanging(System.DateTime value);
    partial void OnLeadDateChanged();
    partial void OnspLeadDateChanging(string value);
    partial void OnspLeadDateChanged();
    #endregion
	
	public Lead()
	{
		OnCreated();
	}
	
	[Column(Storage="_LeadID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string LeadID
	{
		get
		{
			return this._LeadID;
		}
		set
		{
			if ((this._LeadID != value))
			{
				this.OnLeadIDChanging(value);
				this.SendPropertyChanging();
				this._LeadID = value;
				this.SendPropertyChanged("LeadID");
				this.OnLeadIDChanged();
			}
		}
	}
	
	[Column(Storage="_LeadName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string LeadName
	{
		get
		{
			return this._LeadName;
		}
		set
		{
			if ((this._LeadName != value))
			{
				this.OnLeadNameChanging(value);
				this.SendPropertyChanging();
				this._LeadName = value;
				this.SendPropertyChanged("LeadName");
				this.OnLeadNameChanged();
			}
		}
	}
	
	[Column(Storage="_LeadTitle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string LeadTitle
	{
		get
		{
			return this._LeadTitle;
		}
		set
		{
			if ((this._LeadTitle != value))
			{
				this.OnLeadTitleChanging(value);
				this.SendPropertyChanging();
				this._LeadTitle = value;
				this.SendPropertyChanged("LeadTitle");
				this.OnLeadTitleChanged();
			}
		}
	}
	
	[Column(Storage="_LeadBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string LeadBody
	{
		get
		{
			return this._LeadBody;
		}
		set
		{
			if ((this._LeadBody != value))
			{
				this.OnLeadBodyChanging(value);
				this.SendPropertyChanging();
				this._LeadBody = value;
				this.SendPropertyChanged("LeadBody");
				this.OnLeadBodyChanged();
			}
		}
	}
	
	[Column(Storage="_LeadMail", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string LeadMail
	{
		get
		{
			return this._LeadMail;
		}
		set
		{
			if ((this._LeadMail != value))
			{
				this.OnLeadMailChanging(value);
				this.SendPropertyChanging();
				this._LeadMail = value;
				this.SendPropertyChanged("LeadMail");
				this.OnLeadMailChanged();
			}
		}
	}
	
	[Column(Storage="_LeadDate", DbType="Date NOT NULL")]
	public System.DateTime LeadDate
	{
		get
		{
			return this._LeadDate;
		}
		set
		{
			if ((this._LeadDate != value))
			{
				this.OnLeadDateChanging(value);
				this.SendPropertyChanging();
				this._LeadDate = value;
				this.SendPropertyChanged("LeadDate");
				this.OnLeadDateChanged();
			}
		}
	}
	
	[Column(Storage="_spLeadDate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spLeadDate
	{
		get
		{
			return this._spLeadDate;
		}
		set
		{
			if ((this._spLeadDate != value))
			{
				this.OnspLeadDateChanging(value);
				this.SendPropertyChanging();
				this._spLeadDate = value;
				this.SendPropertyChanged("spLeadDate");
				this.OnspLeadDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.[Log]")]
public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _LogID;
	
	private string _LogMessage;
	
	private string _LogType;
	
	private System.DateTime _LogDate;
	
	private string _spLogDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(long value);
    partial void OnLogIDChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnLogTypeChanging(string value);
    partial void OnLogTypeChanged();
    partial void OnLogDateChanging(System.DateTime value);
    partial void OnLogDateChanged();
    partial void OnspLogDateChanging(string value);
    partial void OnspLogDateChanged();
    #endregion
	
	public Log()
	{
		OnCreated();
	}
	
	[Column(Storage="_LogID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
	public long LogID
	{
		get
		{
			return this._LogID;
		}
		set
		{
			if ((this._LogID != value))
			{
				this.OnLogIDChanging(value);
				this.SendPropertyChanging();
				this._LogID = value;
				this.SendPropertyChanged("LogID");
				this.OnLogIDChanged();
			}
		}
	}
	
	[Column(Storage="_LogMessage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string LogMessage
	{
		get
		{
			return this._LogMessage;
		}
		set
		{
			if ((this._LogMessage != value))
			{
				this.OnLogMessageChanging(value);
				this.SendPropertyChanging();
				this._LogMessage = value;
				this.SendPropertyChanged("LogMessage");
				this.OnLogMessageChanged();
			}
		}
	}
	
	[Column(Storage="_LogType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LogType
	{
		get
		{
			return this._LogType;
		}
		set
		{
			if ((this._LogType != value))
			{
				this.OnLogTypeChanging(value);
				this.SendPropertyChanging();
				this._LogType = value;
				this.SendPropertyChanged("LogType");
				this.OnLogTypeChanged();
			}
		}
	}
	
	[Column(Storage="_LogDate", DbType="DateTime NOT NULL")]
	public System.DateTime LogDate
	{
		get
		{
			return this._LogDate;
		}
		set
		{
			if ((this._LogDate != value))
			{
				this.OnLogDateChanging(value);
				this.SendPropertyChanging();
				this._LogDate = value;
				this.SendPropertyChanged("LogDate");
				this.OnLogDateChanged();
			}
		}
	}
	
	[Column(Storage="_spLogDate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spLogDate
	{
		get
		{
			return this._spLogDate;
		}
		set
		{
			if ((this._spLogDate != value))
			{
				this.OnspLogDateChanging(value);
				this.SendPropertyChanging();
				this._spLogDate = value;
				this.SendPropertyChanged("spLogDate");
				this.OnspLogDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="pminsig_ororor.MailList")]
public partial class MailList : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MailListID;
	
	private string _MailListName;
	
	private string _MailListMail;
	
	private string _MailRemoveCode;
	
	private System.DateTime _MailListJoinTime;
	
	private string _spMailListJoinTime;
	
	private System.Nullable<System.DateTime> _MailListLastUpdate;
	
	private string _spMailListLastUpdate;
	
	private byte _Active;
	
	private string _spActvie;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailListIDChanging(string value);
    partial void OnMailListIDChanged();
    partial void OnMailListNameChanging(string value);
    partial void OnMailListNameChanged();
    partial void OnMailListMailChanging(string value);
    partial void OnMailListMailChanged();
    partial void OnMailRemoveCodeChanging(string value);
    partial void OnMailRemoveCodeChanged();
    partial void OnMailListJoinTimeChanging(System.DateTime value);
    partial void OnMailListJoinTimeChanged();
    partial void OnspMailListJoinTimeChanging(string value);
    partial void OnspMailListJoinTimeChanged();
    partial void OnMailListLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnMailListLastUpdateChanged();
    partial void OnspMailListLastUpdateChanging(string value);
    partial void OnspMailListLastUpdateChanged();
    partial void OnActiveChanging(byte value);
    partial void OnActiveChanged();
    partial void OnspActvieChanging(string value);
    partial void OnspActvieChanged();
    #endregion
	
	public MailList()
	{
		OnCreated();
	}
	
	[Column(Storage="_MailListID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MailListID
	{
		get
		{
			return this._MailListID;
		}
		set
		{
			if ((this._MailListID != value))
			{
				this.OnMailListIDChanging(value);
				this.SendPropertyChanging();
				this._MailListID = value;
				this.SendPropertyChanged("MailListID");
				this.OnMailListIDChanged();
			}
		}
	}
	
	[Column(Storage="_MailListName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string MailListName
	{
		get
		{
			return this._MailListName;
		}
		set
		{
			if ((this._MailListName != value))
			{
				this.OnMailListNameChanging(value);
				this.SendPropertyChanging();
				this._MailListName = value;
				this.SendPropertyChanged("MailListName");
				this.OnMailListNameChanged();
			}
		}
	}
	
	[Column(Storage="_MailListMail", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string MailListMail
	{
		get
		{
			return this._MailListMail;
		}
		set
		{
			if ((this._MailListMail != value))
			{
				this.OnMailListMailChanging(value);
				this.SendPropertyChanging();
				this._MailListMail = value;
				this.SendPropertyChanged("MailListMail");
				this.OnMailListMailChanged();
			}
		}
	}
	
	[Column(Storage="_MailRemoveCode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string MailRemoveCode
	{
		get
		{
			return this._MailRemoveCode;
		}
		set
		{
			if ((this._MailRemoveCode != value))
			{
				this.OnMailRemoveCodeChanging(value);
				this.SendPropertyChanging();
				this._MailRemoveCode = value;
				this.SendPropertyChanged("MailRemoveCode");
				this.OnMailRemoveCodeChanged();
			}
		}
	}
	
	[Column(Storage="_MailListJoinTime", DbType="DateTime NOT NULL")]
	public System.DateTime MailListJoinTime
	{
		get
		{
			return this._MailListJoinTime;
		}
		set
		{
			if ((this._MailListJoinTime != value))
			{
				this.OnMailListJoinTimeChanging(value);
				this.SendPropertyChanging();
				this._MailListJoinTime = value;
				this.SendPropertyChanged("MailListJoinTime");
				this.OnMailListJoinTimeChanged();
			}
		}
	}
	
	[Column(Storage="_spMailListJoinTime", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spMailListJoinTime
	{
		get
		{
			return this._spMailListJoinTime;
		}
		set
		{
			if ((this._spMailListJoinTime != value))
			{
				this.OnspMailListJoinTimeChanging(value);
				this.SendPropertyChanging();
				this._spMailListJoinTime = value;
				this.SendPropertyChanged("spMailListJoinTime");
				this.OnspMailListJoinTimeChanged();
			}
		}
	}
	
	[Column(Storage="_MailListLastUpdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> MailListLastUpdate
	{
		get
		{
			return this._MailListLastUpdate;
		}
		set
		{
			if ((this._MailListLastUpdate != value))
			{
				this.OnMailListLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._MailListLastUpdate = value;
				this.SendPropertyChanged("MailListLastUpdate");
				this.OnMailListLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_spMailListLastUpdate", DbType="NVarChar(MAX)")]
	public string spMailListLastUpdate
	{
		get
		{
			return this._spMailListLastUpdate;
		}
		set
		{
			if ((this._spMailListLastUpdate != value))
			{
				this.OnspMailListLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._spMailListLastUpdate = value;
				this.SendPropertyChanged("spMailListLastUpdate");
				this.OnspMailListLastUpdateChanged();
			}
		}
	}
	
	[Column(Storage="_Active", DbType="TinyInt NOT NULL")]
	public byte Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[Column(Storage="_spActvie", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string spActvie
	{
		get
		{
			return this._spActvie;
		}
		set
		{
			if ((this._spActvie != value))
			{
				this.OnspActvieChanging(value);
				this.SendPropertyChanging();
				this._spActvie = value;
				this.SendPropertyChanged("spActvie");
				this.OnspActvieChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
